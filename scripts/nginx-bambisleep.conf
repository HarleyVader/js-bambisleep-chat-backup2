# Nginx configuration for BambiSleep.Chat with maintenance mode support
# Place this in /etc/nginx/sites-available/bambisleep.chat

upstream bambisleep_backend {
    server 127.0.0.1:6969 max_fails=3 fail_timeout=10s;
}

upstream bambisleep_maintenance {
    server 127.0.0.1:6970 max_fails=1 fail_timeout=5s;
}

# Check if maintenance mode is active
map $upstream_response_time $maintenance_mode {
    default 0;
}

server {
    listen 80;
    listen [::]:80;
    server_name bambisleep.chat www.bambisleep.chat;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name bambisleep.chat www.bambisleep.chat;
    
    # SSL configuration (adjust paths as needed)
    ssl_certificate /etc/letsencrypt/live/bambisleep.chat/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/bambisleep.chat/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Client settings
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=bambisleep:10m rate=10r/s;
    limit_req zone=bambisleep burst=20 nodelay;
    
    # Check if maintenance server is available
    location @maintenance {
        proxy_pass http://bambisleep_maintenance;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Maintenance specific headers
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # Main location block
    location / {
        # Try main backend first, fall back to maintenance if unavailable
        proxy_pass http://bambisleep_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # If main backend is down, try maintenance
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        error_page 502 503 504 @maintenance;
    }
    
    # Static files (served directly by nginx for better performance)
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        # Try to serve static files from the project directory first
        root /home/brandynette/web/bambisleep.chat/js-bambisleep-chat/src/public;
        try_files $uri @proxy_static;
        
        # Cache static files
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        
        # CORS for fonts and other assets
        location ~* \.(woff|woff2|ttf|eot)$ {
            add_header Access-Control-Allow-Origin "*";
        }
    }
    
    # Fallback for static files that need to be proxied
    location @proxy_static {
        proxy_pass http://bambisleep_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # If main backend is down, try maintenance
        error_page 502 503 504 @maintenance;
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://bambisleep_backend/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # No fallback for health checks
        proxy_connect_timeout 2s;
        proxy_send_timeout 2s;
        proxy_read_timeout 2s;
    }
    
    # Special handling for maintenance mode trigger
    # Create a file /tmp/bambisleep-maintenance to force maintenance mode
    location = /maintenance-check {
        if (-f /tmp/bambisleep-maintenance) {
            return 503;
        }
        return 200;
    }
    
    # Logs
    access_log /var/log/nginx/bambisleep.chat.access.log;
    error_log /var/log/nginx/bambisleep.chat.error.log;
}

# Optional: Maintenance mode override
# To force maintenance mode, create file: sudo touch /tmp/bambisleep-maintenance
# To exit maintenance mode, remove file: sudo rm /tmp/bambisleep-maintenance
