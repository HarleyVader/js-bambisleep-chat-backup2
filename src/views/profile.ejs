<!DOCTYPE html>
<html lang="en">
<%- include('../views/partials/head.ejs') %>
    <title>
        <%= title %>
    </title>

    <body>
        <%- include('partials/nav') %>

            <div class="container mt-4">
                <!-- Profile Header -->
                <div class="profile-header profile-style-<%= profile.profileStyle %>">
                    <div class="row">
                        <div class="col-md-8">
                            <h1 class="profile-username">
                                <%= profile.username %>
                            </h1>
                            <div class="profile-stats">
                                <span class="stat-item">
                                    <strong>Level:</strong>
                                    <%= profile.level || 0 %>
                                </span>
                                <span class="stat-item">
                                    <strong>XP:</strong>
                                    <%= profile.xp || 0 %>
                                </span>
                                <span class="stat-item">
                                    <strong>Joined:</strong>
                                    <%= new Date(profile.usageStats?.joinDate || profile.createdAt).toLocaleDateString()
                                        %>
                                </span>
                            </div>
                        </div>
                        <div class="col-md-4 text-end">
                            <div class="profile-reactions">
                                <button class="btn btn-outline-danger reaction-btn" data-type="love">
                                    ‚ù§Ô∏è <span class="love-count">
                                        <%= profile.loves || 0 %>
                                    </span>
                                </button>
                                <button class="btn btn-outline-primary reaction-btn" data-type="like">
                                    üëç <span class="like-count">
                                        <%= profile.likes || 0 %>
                                    </span>
                                </button>
                            </div>
                            <% if (isOwner) { %>
                                <div class="mt-2">
                                    <button class="btn btn-success" data-bs-toggle="modal"
                                        data-bs-target="#editProfileModal">
                                        Edit Profile
                                    </button> <button class="btn btn-warning" onclick="setTestLevel()">
                                        Test High Level
                                    </button>
                                </div>
                                <!-- Cheat Menu -->
                                <div class="mt-2">
                                    <div class="btn-group" role="group" aria-label="Cheat Menu">
                                        <button class="btn btn-info btn-sm" onclick="addXP()">
                                            +1000 XP
                                        </button>
                                        <button class="btn btn-danger btn-sm" onclick="resetLevel()">
                                            Reset Level
                                        </button>
                                    </div>
                                    <div class="small text-muted mt-1">Cheat Menu</div>
                                </div>
                                <% } %>
                        </div>
                    </div>
                </div>

                <!-- Profile Content -->
                <div class="row mt-4">
                    <!-- Main Profile Content -->
                    <div class="col-md-8">
                        <!-- Bio Section -->
                        <div class="profile-section">
                            <h3>Bio
                                <% if (isOwner) { %>
                                    <button class="btn btn-sm btn-outline-primary ms-2" id="editBioBtn">Edit</button>
                                    <button class="btn btn-sm btn-success ms-1 d-none" id="saveBioBtn">Save</button>
                                    <button class="btn btn-sm btn-secondary ms-1 d-none" id="cancelBioBtn">Cancel</button>
                                <% } %>
                            </h3>
                            <div class="profile-bio" id="bioDisplay">
                                <% if (bioHtml) { %>
                                    <%- bioHtml %>
                                        <% } else { %>
                                            <p class="text-muted">No bio available yet.</p>
                                            <% } %>
                            </div>
                            <% if (isOwner) { %>
                                <div class="d-none" id="bioEditor">
                                    <textarea class="form-control" id="bioTextarea" rows="8" placeholder="Tell everyone about yourself... (Markdown supported)"><%= profile.bio || '' %></textarea>
                                </div>
                            <% } %>
                        </div>

                        <!-- System Controls Section -->
                        <div class="profile-section">
                            <h3>System Controls</h3>
                            <%- include('partials/profile-system-controls', { profile: profile, xpRequirements:
                                xpRequirements }) %>
                        </div>

                        <!-- Usage Statistics -->
                        <div class="profile-section">
                            <h3>Usage Statistics</h3>
                            <div class="usage-stats">
                                <div class="stat-grid">
                                    <div class="stat-card">
                                        <div class="stat-number">
                                            <%= profile.usageStats?.sessionsCount || 0 %>
                                        </div>
                                        <div class="stat-label">Sessions</div>
                                    </div>
                                    <div class="stat-card">
                                        <div class="stat-number">
                                            <%= Math.round((profile.usageStats?.totalTimeSpent || 0) / 60) %>
                                        </div>
                                        <div class="stat-label">Hours Spent</div>
                                    </div>
                                    <div class="stat-card">
                                        <div class="stat-number">
                                            <%= profile.usageStats?.triggersActivated || 0 %>
                                        </div>
                                        <div class="stat-label">Triggers</div>
                                    </div>
                                    <div class="stat-card">
                                        <div class="stat-number">
                                            <%= profile.usageStats?.messagesPosted || 0 %>
                                        </div>
                                        <div class="stat-label">Messages</div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Session History -->
                        <div class="profile-section">
                            <h3>Session History</h3>
                            <div class="session-history">
                                <div id="sessionList">
                                    <p class="text-muted">Loading session history...</p>
                                </div>
                                <div id="sessionDetails" class="mt-3 d-none">
                                    <h5>Session Details</h5>
                                    <div class="session-content"></div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Sidebar -->
                    <div class="col-md-4">
                        <!-- Social Links -->
                        <div class="profile-section">
                            <h4>Social Links</h4>
                            <div class="social-links">
                                <% if (profile.socialLinks?.twitter) { %>
                                    <a href="<%= profile.socialLinks.twitter %>" target="_blank"
                                        class="social-link twitter">
                                        <i class="fab fa-twitter"></i> Twitter
                                    </a>
                                    <% } %>
                                        <% if (profile.socialLinks?.instagram) { %>
                                            <a href="<%= profile.socialLinks.instagram %>" target="_blank"
                                                class="social-link instagram">
                                                <i class="fab fa-instagram"></i> Instagram
                                            </a>
                                            <% } %>
                                                <% if (profile.socialLinks?.discord) { %>
                                                    <a href="<%= profile.socialLinks.discord %>" target="_blank"
                                                        class="social-link discord">
                                                        <i class="fab fa-discord"></i> Discord
                                                    </a>
                                                    <% } %>
                                                        <% if (profile.socialLinks?.reddit) { %>
                                                            <a href="<%= profile.socialLinks.reddit %>" target="_blank"
                                                                class="social-link reddit">
                                                                <i class="fab fa-reddit"></i> Reddit
                                                            </a>
                                                            <% } %>
                                                                <% if (profile.socialLinks?.custom) { %>
                                                                    <a href="<%= profile.socialLinks.custom %>"
                                                                        target="_blank" class="social-link custom">
                                                                        <i class="fas fa-link"></i> Website
                                                                    </a>
                                                                    <% } %>
                                                                        <% if (!profile.socialLinks ||
                                                                            Object.values(profile.socialLinks).every(link=>
                                                                            !link)) { %>
                                                                            <p class="text-muted">No social links added
                                                                                yet.</p>
                                                                            <% } %>
                            </div>
                        </div>

                        <!-- Profile Style Preview -->
                        <div class="profile-section">
                            <h4>Profile Style</h4>
                            <div class="style-preview">
                                <span class="badge bg-secondary">
                                    <%= profile.profileStyle || 'standard' %>
                                </span>
                                <% if (isOwner) { %>
                                    <p class="small text-muted mt-1">Change in edit profile</p>
                                    <% } %>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Edit Profile Modal -->
            <% if (isOwner) { %>
                <div class="modal fade" id="editProfileModal" tabindex="-1">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Edit Profile</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                            </div>
                            <div class="modal-body">
                                <form id="editProfileForm">
                                    <!-- Bio Section -->
                                    <div class="mb-3">
                                        <label for="bio" class="form-label">Bio (Markdown supported)</label>
                                        <textarea class="form-control" id="bio" name="bio" rows="5"
                                            placeholder="Tell everyone about yourself..."><%= profile.bio || '' %></textarea>
                                    </div>

                                    <!-- Bio File Upload -->
                                    <div class="mb-3">
                                        <label for="bioFile" class="form-label">Or upload .md file</label>
                                        <input type="file" class="form-control" id="bioFile" accept=".md">
                                        <div class="form-text">Upload a markdown file to replace your bio</div>
                                    </div>

                                    <!-- Social Links -->
                                    <h6>Social Links</h6>
                                    <div class="row">
                                        <div class="col-md-6 mb-3">
                                            <label for="twitter" class="form-label">Twitter</label>
                                            <input type="url" class="form-control" id="twitter"
                                                name="socialLinks[twitter]"
                                                value="<%= profile.socialLinks?.twitter || '' %>"
                                                placeholder="https://twitter.com/username">
                                        </div>
                                        <div class="col-md-6 mb-3">
                                            <label for="instagram" class="form-label">Instagram</label>
                                            <input type="url" class="form-control" id="instagram"
                                                name="socialLinks[instagram]"
                                                value="<%= profile.socialLinks?.instagram || '' %>"
                                                placeholder="https://instagram.com/username">
                                        </div>
                                        <div class="col-md-6 mb-3">
                                            <label for="discord" class="form-label">Discord</label>
                                            <input type="text" class="form-control" id="discord"
                                                name="socialLinks[discord]"
                                                value="<%= profile.socialLinks?.discord || '' %>"
                                                placeholder="username#1234">
                                        </div>
                                        <div class="col-md-6 mb-3">
                                            <label for="reddit" class="form-label">Reddit</label>
                                            <input type="url" class="form-control" id="reddit"
                                                name="socialLinks[reddit]"
                                                value="<%= profile.socialLinks?.reddit || '' %>"
                                                placeholder="https://reddit.com/u/username">
                                        </div>
                                        <div class="col-12 mb-3">
                                            <label for="custom" class="form-label">Custom Website</label>
                                            <input type="url" class="form-control" id="custom"
                                                name="socialLinks[custom]"
                                                value="<%= profile.socialLinks?.custom || '' %>"
                                                placeholder="https://yourwebsite.com">
                                        </div>
                                    </div>

                                    <!-- Profile Style -->
                                    <div class="mb-3">
                                        <label for="profileStyle" class="form-label">Profile Style</label>
                                        <select class="form-select" id="profileStyle" name="profileStyle">
                                            <option value="minimal" <% if (profile.profileStyle==='minimal' ) { %>
                                                selected<% } %>>Minimal - Clean and simple</option>
                                            <option value="standard" <% if (profile.profileStyle==='standard' ||
                                                !profile.profileStyle) { %>selected<% } %>>Standard - Balanced design
                                            </option>
                                            <option value="premium" <% if (profile.profileStyle==='premium' ) { %>
                                                selected<% } %>>Premium - Rich and detailed</option>
                                        </select>
                                    </div>
                                </form>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="button" class="btn btn-primary" id="saveProfile">Save Changes</button>
                            </div>
                        </div>
                    </div>
                </div>
                <% } %>

                    <%- include('partials/footer') %>

                        <script src="/js/bootstrap.bundle.min.js"></script>
                        <script>
                            // Test function to set high level account
                            async function setTestLevel() {
                                const username = '<%= profile.username %>';
                                try {
                                    const response = await fetch(`/profile/${username}/debug/set-level`, {
                                        method: 'POST',
                                        headers: { 'Content-Type': 'application/json' },
                                        body: JSON.stringify({ level: 8, xp: 500000 })
                                    });

                                    if (response.ok) {
                                        const result = await response.json();
                                        alert(`Profile updated: ${result.message}`);
                                        location.reload();
                                    } else {
                                        throw new Error('Failed to update profile');
                                    }
                                } catch (error) {
                                    console.error('Error updating profile:', error);
                                    alert('Error updating profile. Please try again.');
                                }
                            }

                            // Cheat function to add 1000 XP
                            async function addXP() {
                                const username = '<%= profile.username %>';
                                try {
                                    const response = await fetch(`/profile/${username}/debug/add-xp`, {
                                        method: 'POST',
                                        headers: { 'Content-Type': 'application/json' },
                                        body: JSON.stringify({ xp: 1000 })
                                    });

                                    if (response.ok) {
                                        const result = await response.json();
                                        alert(`Added 1000 XP! ${result.message}`);
                                        location.reload();
                                    } else {
                                        throw new Error('Failed to add XP');
                                    }
                                } catch (error) {
                                    console.error('Error adding XP:', error);
                                    alert('Error adding XP. Please try again.');
                                }
                            }

                            // Cheat function to reset level
                            async function resetLevel() {
                                const username = '<%= profile.username %>';
                                if (!confirm('Are you sure you want to reset your level to 0? This cannot be undone.')) {
                                    return;
                                }
                                
                                try {
                                    const response = await fetch(`/profile/${username}/debug/reset-level`, {
                                        method: 'POST',
                                        headers: { 'Content-Type': 'application/json' },
                                        body: JSON.stringify({ level: 0, xp: 0 })
                                    });

                                    if (response.ok) {
                                        const result = await response.json();
                                        alert(`Level reset! ${result.message}`);
                                        location.reload();
                                    } else {
                                        throw new Error('Failed to reset level');
                                    }
                                } catch (error) {
                                    console.error('Error resetting level:', error);
                                    alert('Error resetting level. Please try again.');
                                }
                            }

                            // Reaction buttons
                            document.querySelectorAll('.reaction-btn').forEach(btn => {
                                btn.addEventListener('click', async () => {
                                    const type = btn.dataset.type;
                                    const username = '<%= profile.username %>';

                                    try {
                                        const response = await fetch(`/profile/${username}/reaction`, {
                                            method: 'POST',
                                            headers: { 'Content-Type': 'application/json' },
                                            body: JSON.stringify({ type })
                                        });

                                        if (response.ok) {
                                            const result = await response.json();
                                            document.querySelector('.like-count').textContent = result.likes;
                                            document.querySelector('.love-count').textContent = result.loves;
                                        }
                                    } catch (error) {
                                        console.error('Error adding reaction:', error);
                                    }
                                });
                            });

        <% if (isOwner) { %>
                                // Save profile changes
                                document.getElementById('saveProfile').addEventListener('click', async () => {
                                    const form = document.getElementById('editProfileForm');
                                    const formData = new FormData(form);
                                    const bioFile = document.getElementById('bioFile').files[0];

                                    try {
                                        // Handle file upload first if there's a file
                                        if (bioFile) {
                                            const fileFormData = new FormData();
                                            fileFormData.append('bioFile', bioFile);

                                            const fileResponse = await fetch(`/profile/<%= profile.username %>/upload-bio`, {
                                                method: 'POST',
                                                body: fileFormData
                                            });

                                            if (!fileResponse.ok) {
                                                throw new Error('Failed to upload bio file');
                                            }
                                        }

                                        // Update other profile data
                                        const profileData = {
                                            bio: formData.get('bio'),
                                            profileStyle: formData.get('profileStyle'),
                                            socialLinks: {
                                                twitter: formData.get('socialLinks[twitter]'),
                                                instagram: formData.get('socialLinks[instagram]'),
                                                discord: formData.get('socialLinks[discord]'),
                                                reddit: formData.get('socialLinks[reddit]'),
                                                custom: formData.get('socialLinks[custom]')
                                            }
                                        };

                                        const response = await fetch(`/profile/<%= profile.username %>/update`, {
                                            method: 'POST',
                                            headers: { 'Content-Type': 'application/json' },
                                            body: JSON.stringify(profileData)
                                        });

                                        if (response.ok) {
                                            location.reload(); // Refresh to show changes
                                        } else {
                                            throw new Error('Failed to update profile');
                                        }
                                    } catch (error) {
                                        console.error('Error updating profile:', error);
                                        alert('Error updating profile. Please try again.');
                                    }
                                });

                                // Bio editor functionality
                                document.getElementById('editBioBtn').addEventListener('click', () => {
                                    document.getElementById('bioDisplay').classList.add('d-none');
                                    document.getElementById('bioEditor').classList.remove('d-none');
                                    document.getElementById('editBioBtn').classList.add('d-none');
                                    document.getElementById('saveBioBtn').classList.remove('d-none');
                                    document.getElementById('cancelBioBtn').classList.remove('d-none');
                                });

                                document.getElementById('cancelBioBtn').addEventListener('click', () => {
                                    document.getElementById('bioDisplay').classList.remove('d-none');
                                    document.getElementById('bioEditor').classList.add('d-none');
                                    document.getElementById('editBioBtn').classList.remove('d-none');
                                    document.getElementById('saveBioBtn').classList.add('d-none');
                                    document.getElementById('cancelBioBtn').classList.add('d-none');
                                });

                                document.getElementById('saveBioBtn').addEventListener('click', async () => {
                                    const bioText = document.getElementById('bioTextarea').value;
                                    
                                    try {
                                        const response = await fetch(`/profile/<%= profile.username %>/update`, {
                                            method: 'POST',
                                            headers: { 'Content-Type': 'application/json' },
                                            body: JSON.stringify({ bio: bioText })
                                        });

                                        if (response.ok) {
                                            location.reload();
                                        } else {
                                            throw new Error('Failed to update bio');
                                        }
                                    } catch (error) {
                                        console.error('Error updating bio:', error);
                                        alert('Error updating bio. Please try again.');
                                    }
                                });
        <% } %>

                            // Load session history
                            async function loadSessionHistory() {
                                try {
                                    const response = await fetch(`/profile/<%= profile.username %>/sessions`);
                                    if (response.ok) {
                                        const sessions = await response.json();
                                        displaySessionHistory(sessions);
                                    } else {
                                        document.getElementById('sessionList').innerHTML = '<p class="text-muted">No session history available.</p>';
                                    }
                                } catch (error) {
                                    console.error('Error loading session history:', error);
                                    document.getElementById('sessionList').innerHTML = '<p class="text-danger">Error loading session history.</p>';
                                }
                            }

                            function displaySessionHistory(sessions) {
                                const sessionList = document.getElementById('sessionList');
                                
                                if (!sessions || sessions.length === 0) {
                                    sessionList.innerHTML = '<p class="text-muted">No sessions found.</p>';
                                    return;
                                }

                                const sessionHtml = sessions.map(session => {
                                    const date = new Date(session.startTime).toLocaleDateString();
                                    const time = new Date(session.startTime).toLocaleTimeString();
                                    const duration = Math.round((session.endTime - session.startTime) / 60000);
                                    
                                    return `
                                        <div class="session-item border-bottom py-2" style="cursor: pointer;" onclick="showSessionDetails('${session._id}')">
                                            <div class="d-flex justify-content-between">
                                                <div>
                                                    <strong>${date}</strong> at ${time}
                                                    <div class="text-muted small">${duration} minutes</div>
                                                </div>
                                                <div class="text-muted small">
                                                    ${session.interactions?.length || 0} interactions
                                                </div>
                                            </div>
                                        </div>
                                    `;
                                }).join('');

                                sessionList.innerHTML = sessionHtml;
                            }

                            async function showSessionDetails(sessionId) {
                                try {
                                    const response = await fetch(`/profile/<%= profile.username %>/sessions/${sessionId}`);
                                    if (response.ok) {
                                        const session = await response.json();
                                        displaySessionDetails(session);
                                    }
                                } catch (error) {
                                    console.error('Error loading session details:', error);
                                }
                            }

                            function displaySessionDetails(session) {
                                const detailsDiv = document.getElementById('sessionDetails');
                                const contentDiv = detailsDiv.querySelector('.session-content');
                                
                                const interactionsHtml = session.interactions?.map(interaction => {
                                    const time = new Date(interaction.timestamp).toLocaleTimeString();
                                    return `
                                        <div class="interaction-item mb-2 p-2 border rounded">
                                            <div class="text-muted small">${time}</div>
                                            <div><strong>User:</strong> ${interaction.userMessage}</div>
                                            <div><strong>AI:</strong> ${interaction.aiResponse}</div>
                                        </div>
                                    `;
                                }).join('') || '<p class="text-muted">No interactions recorded.</p>';

                                contentDiv.innerHTML = interactionsHtml;
                                detailsDiv.classList.remove('d-none');
                            }

                            // Load session history on page load
                            window.addEventListener('load', loadSessionHistory);

                            // Make function global for onclick
                            window.showSessionDetails = showSessionDetails;
                        </script>
    </body>

</html>