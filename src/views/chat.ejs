<!DOCTYPE html>
<html lang="en">
<%- include('partials/head') %>
<title><%= title || 'Chat' %> | BambiSleep</title>

<body>
  <%- include('partials/nav', { path: '/chat' }) %>

<div class="container">
  <div class="row">
    <div class="col-md-12">
      <div class="chat-container">
        <div class="chat-header">
          <h2>BambiSleep Chat</h2>
        </div>
        
        <div class="chat-messages">
          <ul id="chat-response">
            <% if (chatMessages && chatMessages.length > 0) { %>
              <% chatMessages.forEach(msg => { %>
                <li>
                  <span class="chat-time"><%= new Date(msg.timestamp).toLocaleTimeString([], {hour12: false}) %></span> -
                  <span class="chat-username"><a href="/profile/<%= msg.username %>" class="username-link"><%= msg.username %></a>:</span>
                  <span class="chat-message"><%= msg.data %></span>
                </li>
              <% }); %>
            <% } else { %>
              <li class="system-message">No messages yet. Be the first to chat!</li>
            <% } %>
          </ul>
        </div>
        
        <div class="chat-input">
          <form id="chat-form">
            <div class="input-group">
              <input type="text" id="chat-message" class="form-control" placeholder="Type your message..." autocomplete="off">
              <div class="input-group-append">
                <button class="btn btn-primary" type="submit">Send</button>
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Include Scripts -->
<script src="/socket.io/socket.io.js"></script>
<script src="/js/enhanced-chat.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Chat form submission
    const chatForm = document.getElementById('chat-form');
    const chatInput = document.getElementById('chat-message');
    
    chatForm.addEventListener('submit', function(e) {
      e.preventDefault();
      
      const message = chatInput.value.trim();
      if (message) {
        // Send message to server
        socket.emit('chat message', { data: message });
        chatInput.value = '';
      }
    });

    // TTS functionality
    function speakText(text, count = 1) {
      if ('speechSynthesis' in window) {
        let spoken = 0;
        const speakOnce = () => {
          const utterance = new SpeechSynthesisUtterance(text);
          utterance.rate = 0.8;
          utterance.pitch = 1;
          utterance.onend = () => {
            spoken++;
            if (spoken < count) {
              setTimeout(speakOnce, 500);
            }
          };
          speechSynthesis.speak(utterance);
        };
        speakOnce();
      }
    }

    // Add glow effect to user
    function addGlowEffect() {
      document.body.classList.add('mentioned');
      setTimeout(() => {
        document.body.classList.remove('mentioned');
      }, 3000);
    }

    // Show countdown in chat
    function showCountdown(count, trigger) {
      const countdownLi = document.createElement('li');
      countdownLi.className = 'system-message countdown-message';
      countdownLi.innerHTML = `<span class="countdown">Speaking "${trigger}" ${count} times...</span>`;
      document.getElementById('chat-response').appendChild(countdownLi);
      
      let remaining = count;
      const countdownInterval = setInterval(() => {
        remaining--;
        if (remaining > 0) {
          countdownLi.innerHTML = `<span class="countdown">Speaking "${trigger}" ${remaining} more times...</span>`;
        } else {
          countdownLi.innerHTML = `<span class="countdown">Finished speaking "${trigger}"</span>`;
          clearInterval(countdownInterval);
          setTimeout(() => {
            countdownLi.remove();
          }, 2000);
        }
      }, 1000);
    }

    // Handle special chat events
    socket.on('chat mention', function(data) {
      if (data.mentionedUser === '<%= user.username %>') {
        addGlowEffect();
      }
    });

    socket.on('chat trigger', function(data) {
      speakText(data.trigger);
    });

    socket.on('chat mention trigger', function(data) {
      if (data.mentionedUser === '<%= user.username %>') {
        addGlowEffect();
        const count = data.count || 1;
        if (count > 1) {
          showCountdown(count, data.trigger);
        }
        speakText(data.trigger, count);
      }
    });
  });
</script>

<style>
  .mentioned {
    animation: glow 3s ease-in-out;
  }
  
  @keyframes glow {
    0%, 100% { box-shadow: none; }
    50% { box-shadow: 0 0 20px rgba(255, 105, 180, 0.8); }
  }
  
  .countdown-message {
    font-style: italic;
    color: #007bff;
  }
  
  .countdown {
    font-weight: bold;
  }
</style>

<link rel="stylesheet" href="/css/enhanced-chat.css">

<%- include('partials/footer'); %>
